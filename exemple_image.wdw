#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : exemple_image
 major_version : 25
 minor_version : 0
 type : 2
 description : ""
 subtype : 0
window :
 name : exemple_image
 identifier : 0x2b72eaae00b2037a
 internal_properties : BQAAAAUAAACVJrIRyW4Efgnak1FpDScRC2sSu99CG5Sq/CqIk8gANeGnhOXTppW0IT3VdYKnPvNrzphiUvvCGEjPTIpn+eg7XveR1O3OXBOHkuSYfNOU/kaowXzQnIOcqmYxbYUgNYt3Kcp6FOeUae5NYFTjt0p22wuaRDEnjoA+vxDzEVDObs2guLKsK8+cvGNNW2smceZg9IXf3mrrzz1gS3Vibh6nPubxAsEJovFcyDVihx9q/jxw1stMxS1fsOffnGzhZlQQ009DQqMYm0eBe8/JvHp34NwRGJfVuBiRDdda6122mUdJjxBxp4NNn2kqDnEuIUZZNS2WslpFz4dVo4BtULLSd1Y5lU7ol4DnPslz3/pZ2pcRVMUTH2pn8SIMi07U/snAKXCBKLxEzrWJJgi0bqNHuEuWMl3b99yi5YYh0a9i7XA4YQE3a26KzY4gh4Aber0dc9cHgU/5ov5CXS0mOg62zHHz2aFFVENYX+xYAy1PYwc2gn5zJtAOWBkBf4CKuTHo1Vdz0xVhtR3GKi7P5DjxATF79fGL4BMcQVmRLEbL+cfnz5MNVcTksFPtcTxa8LIvCQvBTaCoJaAGJPxu1nXnmVIyC2xtwFswQcAbTD1/8HajtskutFNVrQGJqYBONvUCXrXTx4nwdzh5ifKp8W0kvAG4RILpjtAcwCFs1sOes4TCRUct4JlKaidFbRicpqJAUXGQPn2H0FCXSDyf4bZZGFdTGMZ8iuy5MCAgIfFeTwouMJbjBXukQTfheuNteVR0h4gYcON/m9TxH+gsSnD8U/gghQMQUuUgTYPOeMfFgJMjntn60IJT5oPB6zzFDVAuwgKI5JxKNebqfoUEGojslEPGS9tCvH0=
 controls :
  -
    name : Image1
    identifier : 0x2b72eaeb0108f2cc
    internal_properties : BQAAAAUAAACvBMHrj5SCEo7InUSqTfKzw4tGeOQYPBc7SYzYYcGi0L8S4JX/sV+0bBqBlj0jNNuEKLQTPKr0UoQwKFL6Y9YupwtpeR7MU052I8SU+F9C6CNRhpu8ia1qBH8dfzX9VWgBkejucafp2CH9iiGJvlo4u6JNMxrWThSY6zIwaNKkm5EZ1jRgY/PiNkGKZs56YCA8tYMMzWmXQiCm4FotlON8ScTSVLX5umaLWWJ4ZfFE+PrGBtyZ0QPkjpjDDn7giPT/7+JjlqFhO6vS0WIzRHTpBS9z27CIkrAJKJ16EWfnd3qvIcI13PbadVf61vd5JcQUtjA9FmzSYsAiz/FKm2fRq4wbS1lQMfKqqsyMWPLz1AqKfuk2P2EDJGAffzRaquE/hCU0Ljko+T7mE0Pxbwqu/Pyn2angz40LjoW4TxojS7pP4v+NNK3hQPddiS047FjfjYNHmt6qpfVY2IH3vZGrcz9Nx0jZ3bsbZaH7MiFze+APQ0oLZW1ALThfB+EBDbynIKDN/ew7c5g0NMD4BzxKw2oX2RMcxBq8DXnPYhtHE7/0fSJEeuEEiNCfwyZnpwOQwxmjMT2w9Pxdj/SJJ1dp0FjyqDSCPihqpW3qWKkIAyAXBfpevi23d8W6NYuiF0sXJvWiY0IgfdR9WZVaS4yO5HUsES0VGSndSyg/bz8qej7MTPXmF12aOsi0AjX1klRqDGeKFaD9thqr3z/qZ0mO+hMOzHyQUNNTuTcMbXMKQG7Fl1X7SjUkL64ldwao7kJ5EmuTNPw6hN65NkYRViiD/RHXVUsp3grKMTTnnSa3/8k2dMu7B2zOS1i88f/WM+tVcxScv+Mrqiw72sFadqqjh1hy3dXZ4HkpZ0lTdjB65pfXQKtIQw==
    type : 8
    code_elements :
     type_code : 8
     p_codes : []
  -
    name : BTN_TEST
    identifier : 0x2b73e58d0154f9c7
    internal_properties : BQAAAAUAAADu5901eZWWGlOxsEJnG/ugGBYDiUVdaaETs1qmFwzO+RBDZvvH8ZO3YXk6qB8e7eNfeDWTt3LLoif6XS1YDWCDHvtJ954vFoKoL2jgeSMijVcEb/qSk9uosOKDXe4L85rhBD9x/yft/c8vrnLx341mPAOQ0DY5igJwl21MmHVbTZq7unC9C37dZHpRYkZNhSTCb2ioCF7lxQQojqzI6n+EhAuKulJL4DR5UXwHBaXk7rkMruTCDoGvhokfX/1qHn7fFcHJa/+2o1FWCI0KkR4GpsyngCfWEDApoXYYTlCTXqLByqMVYl0ra8lEHwyl5LzuHkayVI1TsZUycUQSevBJNHQdvHpEatyJQ8fi7nwub8pF0/fq0+Y3HzHPreZMbtzOKJbTxfbdq3uMWWikS4O13daIxCtSmjwNj6TYUNJPTqusBb2+XMQg1cVpREwurgLb4rABL0gFNpWXaadffSKLdn47D+ct/hVuCRKmfcfBzNAC31IEe6Lr7uCIv5aD13e18eeB2Ffijg3aTdruleb1uPeQUqHR2VOssIUAtxCG8YSu/+cClqaoquMH8iBcBGW8Ah21YElM56qIafiXq9q7HHPeCnPQ0kvk/ZWbbhJkOrLAOFE4E8bIzPf4l2yk/NU1LI7qLdReji4QT0vNGBSHzRdFI5zwU40AQj+oDiiQtnafIOqGC1ccFcEIcGPL1b2L1YRe8FsKo7/Y+GL1T+UmCivwKA940cSzTNW4pE7L1sQhPYQ8D8zopKSLQfPjGQ==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         // récupération de la bitmap pour le champ <Image1>
         hdc est un entier système
         hdc = dDébutDessin(Image1)
                 
         bmpSource est BitmapAvecPtr(hdc, Image1..Largeur, Image1..Hauteur)
         bmpDest   est BitmapAvecPtr(hdc, Image1..Largeur, Image1..Hauteur)
         
         // init avec l'image courante
         bmpSource.CopieVersMémoire()
         bmpDest.CopieVersMémoire()
         
         ChronoDébut()
         pour i = 1 a 200
         	// flouter l'image dans <bmpSource> vers <bmpDest>
         	_FlouteImage(bmpSource.pointeurSurPixel, bmpDest.pointeurSurPixel,  Image1..Largeur, Image1..Hauteur, bmpSource.largeur1Ligne)
         	
         	// copie vers le champ image
         	bmpDest.CopieVersEcran()
         	 // invalidation et maj graphique
         	API("User32", "InvalidateRect", Handle(Image1),0,0)
         	Multitâche(-1)
         	
         	// relancer le flous sur l'image floutée pour flouter plus fort
         	bmpSource.CopieVersMémoire()
         	
         fin
         trace("durée en ms : " + chronofin())
         
        type : 18
      -
        type : 161
        enabled : false
 menu :
  name : _Menu
  identifier : 0x292573e513b5f221
  internal_properties : BQAAAAUAAABd4biPtdLQOwfUFiqrit8H4xfGqKyz9t6VLxCUnNZRQiLPVs82PZNE+UVdKRzjizyeuKyRur85gNMUfqplpmtNDnQWQla9zo+GH9+1EfUJ6w17Dn/egD/gv+Hhywk8c9unIdzEp7EHgaAqD28w7Agveg4u19PBcKGZtQ==
  options : []
 languages :
  - fr-FR
 popup_menus : []
 message_bar :
  internal_properties : BQAAAAUAAABqPQh6HC8RxAVkp2SqPYLuZrfVhd+1KX4lx22hIT8uqEpE6yP7Sbc2rmVqdmL816EWzXOkEe9ijOtYwchZKAfpy3B1cNqhpJgsnbUs
 code_elements :
  internal_properties : BQAAAAUAAAAmptIsq1J+rrZGQ/L59nC0xIqbcJPqClkxiaNywyyZc5KKWMCX4k4FaHoeywEk5gwP4+fRUIZ7IZCToUH0PSOm8uTP+vAXWprVuLwVNzEpsfN3
  type_code : 1
  p_codes :
   -
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      // exemple_image ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE MaFenêtre()
      
      procAssembeur est une procédure
   -
     code : |1+
      
      
     type : 34
   -
     code : |1+
      
      
     type : 2
   -
     code : |1+
      
      
     type : 40
   -
     code : |1+
      
      
     type : 234
   -
     code : |1+
      
      
     type : 165
   -
     code : |1+
      
      
     type : 177
   -
     code : |1+
      
      
     type : 180
   -
     type : 230
     enabled : false
  procedures :
   -
     name : _FlouteImage
     procedure_id : 1978177969954699618
     type_code : 14
     code : |1+
      //
      PROCEDURE _FlouteImage( pPixelSource est un entier système, pPixelDest est un entier système, largeur entier, hauteur entier, larg1LigneEnOctet entier)
      
      // si on a déjà compilé
      si procAssembeur<>null
      	procAssembeur( pPixelSource, pPixelDest, largeur, hauteur, larg1LigneEnOctet ) 
      	retour
      FIN
      
      // code ASM a compiler
      sCodeAssembleur est chaine = [
      	;proto C:
      	; mult32*32_64( pbyte pPixelSource, pbyte pPixelDest, int32 l, int32 h, int32 larg1LigneEnOctet )
      	
      	; prologue
      	push        ebp
      	mov         ebp,esp
      	push 		edi
      	push 		ecx
      	push 		edx
      	push		ebx
      	push		esi
      	
      	// récup paramètres
      	mov			edi,[ebp+8]  ; pPixelSource
      	mov			esi,[ebp+12] ; pPixelDest
      	mov			edx,[ebp+20] ; edx = hauteur
      	; // commencer à la ligne 1 a cause de la lecture de pixel a la ligne Y-1
      	;//mov			ecx,[ebp+24] ; ecx = larg1LigneEnOctet
      	Dec			edx
      	Dec			edx	; //  arreter au pixel-1
      
      	push esi
      	Push edi
      boucle_Y:
      	;// calcul edi/di
      	mov edi,[ESP]	; Var locale 0
      	mov esi,[ESP+4] ; Var LOCALE 1
      	Add edi,[ebp+24]
      	Add esi,[ebp+24]
      	mov [ESP],   edi ; Var LOCALE 0
      	mov [ESP+4], esi ; Var LOCALE 1
      		
      	Add esi,3
      	Add edi,3
      
      	mov			ecx,[ebp+16] ; ecx = largeur
      	; // commencer à la colonne 1 a cause de la lecture de pixel a la colonne X-1
      	dec	ecx		; commmcer au pixel X+1
      	dec	ecx		; arreter au pixe   X-1
      
      boucle_X:
      	; R
      	call FlouPixel
      	; V
      	call FlouPixel
      	; B
      	call FlouPixel
      	; x--		
      	dec ecx;
      	jnz boucle_X ; tant que x > 0 goto boucle_X
      	;y--
      	dec edx
      	jnz boucle_Y;   tant que y > 0 goto boucle_X
      	
      	;--------------------------	
      	; epilogue
      	Pop esi
      	Pop edi
      	
      	pop			esi
      	pop 		ebx
      	pop			edx
      	pop			ecx
      	pop 		edi
      	pop         ebp 
      	ret			20 ;//  5 paramètres de 4 octets
      	
      FlouPixel:
      	// procédure FlouPixel()
      	// flouter un composante R/V ou B d'un pixel 24 bits.
      	//   source dans [edi], 
      	//   destination dans [esi]
      	push ecx
      	mov			ecx,[ebp+24] ; ecx = larg1LigneEnOctet
      	
      	xor	eax,eax	; eax= 0
      	xor	ebx,ebx	; ebx= 0
      	mov	al,[edi]
      	//add eax,eax
      	//shl eax,2	; // eax = eax*4, pondération a 4
      	mov	bl,[edi+3]	; X+1
      	add eax,ebx
      	mov	bl,[edi+-3] ; X-1
      	add eax,ebx
      	mov	bl,[edi+ecx] ; Y+1
      	add eax,ebx ;
      	neg ecx
      	mov	bl,[edi+ecx] ; Y-11
      	Add eax,ebx ;	
      	
      	//shr eax, 3;// eax = eax/8 => moyenne
      	mov	ecx,5
      	div al,cl
      	; // affecter la composant R,V ou B du pixel résultat
      	mov	[esi],al
      	; pixel suivant
      	inc edi
      	inc esi
      	
      	pop ecx
      	ret	// fin de la procédure
      ]
      
      // compiler le coder assembleur vers une procédure WL
      procAssembeur = compileAsmX86(sCodeAssembleur) 
      SI ErreurDétectée ALORS
      	Erreur()
      	RETOUR
      FIN
      
      // appel procédure WL qui exécute le code assembleur
      procAssembeur( pPixelSource, pPixelDest, largeur, hauteur, larg1LigneEnOctet )
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BQAAAAUAAAAwjDLmDSZ0H1P68nJIeNfqR9EvRjU/K+sVcM1T6rhVNr+VTV1mZ/rmoweYbFDZUhBGcv8UsxlDxVCOnb2U/SQOvlGWzNby3/w/V+ppSymxv+Vh
  original_name : Modele1
resources :
 string_res :
  identifier : 0x1b72eaa30108d779
  internal_properties : BQAAAAUAAAAa2Zm8J9E/zh+/WIrVvz1fER/So3PB0gjQuxc1xKQVWY4ZDm5lfg==
custom_note :
 internal_properties : BQAAAAUAAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
rad :
 internal_properties : BQAAAAUAAABoAN7PLpwJW3EiA7WVZdCA5EwrCA1rvutcDHooMWKe
