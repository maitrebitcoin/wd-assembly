#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : exemple_image
 major_version : 25
 minor_version : 0
 type : 2
 description : ""
 subtype : 0
window :
 name : exemple_image
 identifier : 0x2b72eaae00b2037a
 internal_properties : BQAAAAUAAACySBM5RcIqLT+xBFn9cDsX17Z9Ea2FM2OgmKxmroWJTm7ryfSqNnFbMW4yzJlNFkiHHmDIqHwRRUNY1VtOzjsC77UCWPK1/ygArIQTJqNddm0sUydp93PBwYX5D9S2rFTb44H6tuU8zujuiaPU9dcWc5k4LnHjIh8pNH/Au4dczpWSKai9Cabn75mbyzHE4ccld6L3x878rPaG06vb9OHfh6DIdEtIb80tNBgjbMsLg6zTwXePoj9a7TxqItHxnJx2TrMs+Lf+F3GljJDpo1JmQvSplwCaRoDHEz81ITzp7W3dGkw+w4hdY2UJQ2Erhuw4dzJQQzsPOWC13Zd6YDHPRryihacnvPPYBRC2mMLm6ah5nO/dJ1hFZVmD1SMrIRyqkb//QV7zruMSIBCNb0eVcmZpQDTSHivz7mLfFDlpKJi6XQxnNPMMl0/BF0Ac9ciS8ETZXGWD2NrpgyI6Rb4rZ4+38mUaIr8UsVP2xUIQ5JAFQVWIO+EFuFYhtBDO6dRCqY2zDCFj2bTe1ieDe3Zv8ceeQsFpZuznAk7rOOUS0S1RrD1klEsRB2VDJw/bcm5AAcMcHX2SjzizwfRJLpdQcC//l8/lktf14HDMt2QmkFYTVCCunXPXeCZIAhF6qO1JzXQGBd4RikqysO7ggpMkb6Rcvr3J/ZmYKc3KfWG8MypwEp+FZbjQfWo72xiz4t1ZIobFcBxeFIXHePFwEboLo8QHZvk25tv1hUWmuq6tlr0I78O9dPIwMmbojoATDNPadS02+VHwL3B5CA/3FTALQ5DGX9ckszjerQCzO6knHszZwDU4yNh7h5QqJ0QFquyzSm0GmsvMumwgO3Y+f4Qj0F2R
 controls :
  -
    name : Image1
    identifier : 0x2b72eaeb0108f2cc
    internal_properties : BQAAAAUAAABzA5oGvao7Ixho/BHj5/3pb6ysA0i99Um6UZf6Xi8/FhrcPnc8S8UGA2DNyIYVLyzmZ7E5GB/ZNCBZXbREBxM3TWSuJ8PnAdxRWvTjL5AK2mbqQr7nv8Q9OGvrljaeDCNnzLgIEXXxR5K7CqFqS/nULDE8MApZRYBeWG9AYQxi6CU8C03Pfot1tYrWgboCsDMfdI+yDdN1gymfXtlrtrCwTh1NK17TjdEkdQUEzoxLVpfCph0tYfwDYWt7KYwGHyNQ/7qLudy5lOKXqfRtj1C+vThJWdybFloay31vtvPmtet/jW12L6CmP+URTAK4+7PtvYQwU52e1egXxN7yeQ5s9UkGQAPLJ79pmyz+G81bhE01mdsZ7oORqGvkx06B6qzco0QaTsqj6bZLOUnD9nGwHfW/KQiWtHrZV2CIID3jHGBDrKKhGIQkIDRJvrJArpYADnLhk/C4Ba6gkK2/teEogobIx+CyieuJA7THt7P7ZnSee/403kwaM6m+JakBlVLrW922ydk2HzWqwZuq454hEAQR8Escw/CeZr144iVY1CdTYlPK4NVjAKiWuIm3pqW7cdEkTRE7Cng99J2hp0ynN91pMK6e1rTl5GDD7zXePyuxl6bz+TgsOnN+fanl8u+ECD0AtV8n9G3TblOHmuyozaN6pNpE0wbOMagBwfrKiZfYoJWc4xZxWPwXkkyZiyVnRPA42XrYcapGs+H4KfJaH2kOfQdmJjTpRTYd2pE2E4xPsPuKMQ6NDcdpnS3pRKj+xj2+udzSHXkTr/DlLLDNLj6eMsfxyYoLT+RodYXimu7rbTbHx5C9cTxJKbu1E/nEFGFIVt9bkbs=
    type : 8
    code_elements :
     type_code : 8
     p_codes : []
  -
    name : BTN_TEST
    identifier : 0x2b73e58d0154f9c7
    internal_properties : BQAAAAUAAAAvdlGb8AokMt+jr4XYR9olvRixM48qknoZUe7mEdGG1uuMevP7KDcpJc8nu9XgDwM5aV+tPonpllwu0kq+tcpmEL+k6hDK2N6Hw4ZvpnzG8tlelNc9ZDWCyjorgHbZWJl8i1ulCV413oUScEQW7b+zeqEWo15BLNo/leVrwLhvl0Hs9PeiGxHqszHK/aJCUX+O83J+uLBq3N4sWW1ckDzgqBJdcfme+Q1TJGDe12UM60/srPzNOf/yUqGNHeOQJ76dPWfFZFRrQ58eqo6WpSVmrPwZypGJRh4bAonKiZP2JvC4S+tvboXt2n6Qtf1WpTOyRu/BqbzpLn2mxZ8aOiua+ukzqG9xcZBbhbdOUBr70S5moeOUCJvB1UylwiKtN5zl8LE86G5rHbBA2krfMq9/CqoLhd5Svv4wIxkWTfdjJDhw4M6N/ASmCp3ujCs1tGByOuGMpFLPJBCXiKsaZOonOQooXrCvGG3DHWNAJgh3EAHuqvvv94Dv0UgB+7FuPSfu+UIiO/3O+jRKgAQHQk5xW9FXR7RVGR8zwKB8PJ3Dwj0QzQWuuY2vhBTlkYiSASTUZVV5+gLlYDSfw4N7lalM1uQ8oAPLC2qcZi0gghhVZ5b/Xj8oXGtDmJjciORe7yZtpdBkLfWbTdS7J+CrGV0a5tKbi+4CQ85YSwvRUKLBxvnl/62WiIE4HC75G/T0kaOEAi4oxjB5HkH/yj11qvxfXqGUkjwCgyxFC4ljSAkgIw==
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         // récupération de la bitmap pour le champ <Image1>
         hdc est un entier système
         hdc = dDébutDessin(Image1)
                 
         bmpSource est BitmapAvecPtr(hdc, Image1..Largeur, Image1..Hauteur)
         bmpDest   est BitmapAvecPtr(hdc, Image1..Largeur, Image1..Hauteur)
         
         // init avec l'image courante
         bmpSource.CopieVersMémoire()
         bmpDest.CopieVersMémoire()
         
         ChronoDébut()
         pour i = 1 a 200
         	// flouter l'image dans <bmpSource> vers <bmpDest>
         	_FlouteImage(bmpSource.pointeurSurPixel, bmpDest.pointeurSurPixel,  Image1..Largeur, Image1..Hauteur, bmpSource.largeur1Ligne)
         	
         	// copie vers le champ image
         	bmpDest.CopieVersEcran()
          // invalidation et maj graphique
         	API("User32", "InvalidateRect", Handle(Image1),0,0)
         	Multitâche(-1)
         	
         	// relancer le flous sur l'image floutée pour flouter plus fort
         	bmpSource.CopieVersMémoire()
         	
         fin
         trace(chronofin())
         
        type : 18
      -
        type : 161
        enabled : false
 menu :
  name : _Menu
  identifier : 0x292573e513b5f221
  internal_properties : BQAAAAUAAABd4biPtdLQOwfUFiqrit8H4xfGqKyz9t6VLxCUnNZRQiLPVs82PZNE+UVdKRzjizyeuKyRur85gNMUfqplpmtNDnQWQla9zo+GH9+1EfUJ6w17Dn/egD/gv+Hhywk8c9unIdzEp7EHgaAqD28w7Agveg4u19PBcKGZtQ==
  options : []
 languages :
  - fr-FR
 popup_menus : []
 message_bar :
  internal_properties : BQAAAAUAAABqPQh6HC8RxAVkp2SqPYLuZrfVhd+1KX4lx22hIT8uqEpE6yP7Sbc2rmVqdmL816EWzXOkEe9ijOtYwchZKAfpy3B1cNqhpJgsnbUs
 code_elements :
  internal_properties : BQAAAAUAAAAmptIsq1J+rrZGQ/L59nC0xIqbcJPqClkxiaNywyyZc5KKWMCX4k4FaHoeywEk5gwP4+fRUIZ7IZCToUH0PSOm8uTP+vAXWprVuLwVNzEpsfN3
  type_code : 1
  p_codes :
   -
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      // exemple_image ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE MaFenêtre()
      
      procAssembeur est une procédure
   -
     code : |1+
      
      
     type : 34
   -
     code : |1+
      
      
     type : 2
   -
     code : |1+
      
      
     type : 40
   -
     code : |1+
      
      
     type : 234
   -
     code : |1+
      
      
     type : 165
   -
     code : |1+
      
      
     type : 177
   -
     code : |1+
      
      
     type : 180
   -
     type : 230
     enabled : false
  procedures :
   -
     name : _FlouteImage
     procedure_id : 1978177969954699618
     type_code : 14
     code : |1+
      //
      PROCEDURE _FlouteImage( pPixelSource est un entier système, pPixelDest est un entier système, largeur entier, hauteur entier, larg1LigneEnOctet entier)
      
      // si on a déjà compilé
      si procAssembeur<>null
      	procAssembeur( pPixelSource, pPixelDest, largeur, hauteur, larg1LigneEnOctet ) 
      	retour
      FIN
      
      // code ASM a compiler
      sCodeAssembleur est chaine = [
      	;proto C:
      	; mult32*32_64( pbyte pPixelSource, pbyte pPixelDest, int32 l, int32 h, int32 larg1LigneEnOctet )
      	
      	; prologue
      	push        ebp
      	mov         ebp,esp
      	push 		edi
      	push 		ecx
      	push 		edx
      	push		ebx
      	push		esi
      	
      	// récup paramètres
      	mov			edi,[ebp+8]  ; pPixelSource
      	mov			esi,[ebp+12] ; pPixelDest
      	mov			edx,[ebp+20] ; edx = hauteur
      	; // commencer à la ligne 1 a cause de la lecture de pixel a la ligne Y-1
      	;//mov			ecx,[ebp+24] ; ecx = larg1LigneEnOctet
      	Dec			edx
      	Dec			edx	; //  arreter au pixel-1
      
      	push esi
      	Push edi
      boucle_Y:
      	;// calcul edi/di
      	mov edi,[ESP]	; Var locale 0
      	mov esi,[ESP+4] ; Var LOCALE 1
      	Add edi,[ebp+24]
      	Add esi,[ebp+24]
      	mov [ESP],   edi ; Var LOCALE 0
      	mov [ESP+4], esi ; Var LOCALE 1
      		
      	Add esi,3
      	Add edi,3
      
      	mov			ecx,[ebp+16] ; ecx = largeur
      	; // commencer à la colonne 1 a cause de la lecture de pixel a la colonne X-1
      	dec	ecx		; commmcer au pixel X+1
      	dec	ecx		; arreter au pixe   X-1
      
      boucle_X:
      	; R
      	call FlouPixel
      	; V
      	call FlouPixel
      	; B
      	call FlouPixel
      	; x--		
      	dec ecx;
      	jnz boucle_X ; tant que x > 0 goto boucle_X
      	;y--
      	dec edx
      	jnz boucle_Y;   tant que y > 0 goto boucle_X
      	
      	;--------------------------	
      	; epilogue
      	Pop esi
      	Pop edi
      	
      	pop			esi
      	pop 		ebx
      	pop			edx
      	pop			ecx
      	pop 		edi
      	pop         ebp 
      	ret			20 ;//  5 paramètres de 4 octets
      	
      FlouPixel:
      	// procédure FlouPixel()
      	// flouter un composante R/V ou B d'un pixel 24 bits.
      	//   source dans [edi], 
      	//   destination dans [esi]
      	push ecx
      	mov			ecx,[ebp+24] ; ecx = larg1LigneEnOctet
      	
      	xor	eax,eax	; eax= 0
      	xor	ebx,ebx	; ebx= 0
      	mov	al,[edi]
      	//add eax,eax
      	//shl eax,2	; // eax = eax*4, pondération a 4
      	mov	bl,[edi+3]	; X+1
      	add eax,ebx
      	mov	bl,[edi+-3] ; X-1
      	add eax,ebx
      	mov	bl,[edi+ecx] ; Y+1
      	add eax,ebx ;
      	neg ecx
      	mov	bl,[edi+ecx] ; Y-11
      	Add eax,ebx ;	
      	
      	//shr eax, 3;// eax = eax/8 => moyenne
      	mov	ecx,5
      	div al,cl
      	; // affecter la composant R,V ou B du pixel résultat
      	mov	[esi],al
      	; pixel suivant
      	inc edi
      	inc esi
      	
      	pop ecx
      	ret	// fin de la procédure
      ]
      
      // compiler le coder assembleur vers une procédure WL
      procAssembeur = compileAsmX86(sCodeAssembleur) 
      SI ErreurDétectée ALORS
      	Erreur()
      	RETOUR
      FIN
      
      // appel procédure WL qui exécute le code assembleur
      procAssembeur( pPixelSource, pPixelDest, largeur, hauteur, larg1LigneEnOctet )
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BQAAAAUAAAAwjDLmDSZ0H1P68nJIeNfqR9EvRjU/K+sVcM1T6rhVNr+VTV1mZ/rmoweYbFDZUhBGcv8UsxlDxVCOnb2U/SQOvlGWzNby3/w/V+ppSymxv+Vh
  original_name : Modele1
resources :
 string_res :
  identifier : 0x1b72eaa30108d779
  internal_properties : BQAAAAUAAAAa2Zm8J9E/zh+/WIrVvz1fER/So3PB0gjQuxc1xKQVWY4ZDm5lfg==
custom_note :
 internal_properties : BQAAAAUAAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
rad :
 internal_properties : BQAAAAUAAABoAN7PLpwJW3EiA7WVZdCA5EwrCA1rvutcDHooMWKe
