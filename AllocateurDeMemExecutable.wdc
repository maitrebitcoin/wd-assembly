#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : AllocateurDeMemExecutable
 major_version : 25
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x1b6542580025881d
 internal_properties : BQAAAAUAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  internal_properties : BQAAAAUAAACmcEcPUOl8P88f4DqAteA6m/Mt111GGOClrNjaLJ9vO63bNEtdrqYoCCnjX1eG34p8AOi72Du5JSuppQ==
  type_code : 10
  p_codes :
   -
     code : |1+
      AllocateurDeMemExecutable est une Classe
      	// blocs de mémoires alloués
      	tabBlocAlloué est un tableau d'entier système
      	// taille par défaut d'un bloc
      	nTaillDefautBloc   est un entier
      	// fin du bloc en cours et taille disponible dedans
      	pfinBloc est un entier système
      	nTailleDispo est entier
      FIN
      
      // constantes pour les API WIN32 VirtualAlloc, VirtualProtect,  VirtualFree 
      CONSTANT
      	MEM_COMMIT  	=            0x00001000 
      	MEM_RESERVE	 	=            0x00002000 
      	
      	PAGE_EXECUTE 			=	0x10
      	PAGE_READWRITE			=	0x04
      	PAGE_EXECUTE_READWRITE 	=   0x40 
      	
      	MEM_RELEASE				= 0x8000
      FIN 
     type : 131072
  procedures :
   -
     name : Constructeur
     internal_properties : BQAAAAUAAABhuWPf24fox0QJTXJHJ6SMYiWFGaBXBzJxbDjj9k9PbE7TvxVJGJtAsIofe6FP8s2jMio6yfbBQ44ORaW7nAUE7BwGKbOkefgr2PYmkvbNoi84sZQJrWTffrE3xsfdE77Iu6XMEKBSqV4jCU0KvRanJM6pW7TowzxG3cd4/dMLxpmhjn+fGUMCIFeuFgLlXGCY12sa
     procedure_id : 1974056957398911005
     type_code : 27
     code : |1+
      PROCEDURE Constructeur()
      	// init taille bloc
      	:nTaillDefautBloc = _nGetTailleBlocAlloc()
      
     type : 589824
   -
     name : Destructeur
     procedure_id : 1974056957398976541
     type_code : 28
     code : |1+
      PROCEDURE Destructeur()
      // libération
      POUR TOUT p DE :tabBlocAlloué
      	_Free( p )
      FIN
      
     type : 655360
   -
     name : pNouvelleZoneExecutable
     internal_properties : BQAAAAUAAAC4irx2E4wUOJb/lCQ0dH6zNGgVvM/1keQRBH6rG+UApNDxjVbmBdPP95lLTFGebHY1zFwZX9hB4/KM26bJnHw2a/n1lQDZLG11ujDEFsW1O51PRnbF7Ng0b0ClEkmQnYto6oLYTJUQfGkwJbWYUuYymr3CpTrb47nHoI3a0T57C7OCoRklKCXP8eKePuhZqWWl6SglHQ==
     procedure_id : 1974057197917201164
     type_code : 12
     code : |1+
      // renvoie une zone de mémoire exécutable
      procédure pNouvelleZoneExecutable( local tailleCode est un entier) : entier système
      
      // multiple de 8
      si  modulo(tailleCode,8)<>0
      	tailleCode = tailleCode + 8 - modulo(tailleCode,8)
      fin
      
      // si pas assez de place dans le bloc en cours
      si nTailleDispo<tailleCode alors
      	// si on a besoin d'un gros bloc
      	nTailleAlloc est entier = :nTaillDefautBloc
      	si tailleCode>nTailleAlloc ALORS
      		// alloc d'un gros bloc
      		nTailleAlloc =  tailleCode 
      		// la taille doit être un multiplie de :nTaillDefautBloc
      		si nTailleAlloc modulo :nTaillDefautBloc <> 0 alors
      			nTailleAlloc += :nTaillDefautBloc - (nTailleAlloc modulo :nTaillDefautBloc)
      		fin
      	fin
      	// allocation d'un nouveau  bloc
      	:pfinBloc 		= _pAlloueNouveauBloc(:nTaillDefautBloc)
      	:nTailleDispo	= :nTaillDefautBloc
      	
      FIN
      
      // renvoie la suite dans la zone dispo
      p est entier système  = :pfinBloc 
      :pfinBloc			 += tailleCode 
      :nTailleDispo		 -= tailleCode
      
      renvoyer p
     type : 458752
   -
     name : _nGetTailleBlocAlloc
     internal_properties : BQAAAAUAAADqPHrXaa4c/kRLeKJmEOo/joDf1IXjhcKvsCqhTeH0+CYN67rcF8Px/b1bGjOa6PpndPoF4XZFtbjoB+j3LPzevcGvPTLbzA+bDi0lrSCQMpI6uWvIp615qLkWuziDYPoptd1xu2RRPdZN6gY3Fe09l6ilArWGCFrkzY7zEOkOimCxYApENzbkmlsDkzuYIPjKs2J7yw==
     procedure_id : 1974057485680077261
     type_code : 12
     code : |1+
      // récup de la taille de bloc de mémoire
      procéduré privée _nGetTailleBlocAlloc() : entier
      
      // renvoie la taille d'un page de mémoire
      SYSTEM_INFO  est composé de
      	wProcessorArchitecture est un entier sur 2 octets
      	wReserved			   est un entier sur 2 octets
      	dwPageSize 	   est un entier sur 4 octets
      	lpMinimumApplicationAddress est entier système
      	lpMaximumApplicationAddress est entier système
      	dwActiveProcessorMask est entier système
      	dwNumberOfProcessors est entier sur 4 sans signe
      	dwProcessorType est entier sur 4 sans signe
      	dwAllocationGranularity est entier sur 4 sans signe
      	wProcessorLevel est entier sur 2 sans signe
      	wProcessorRevision est entier sur 2 sans signe
      FIN
      API("kernel32.dll","GetSystemInfo", &SYSTEM_INFO)
      tailleCode est un entier = SYSTEM_INFO.dwPageSize;
      
      renvoyer tailleCode
     type : 458752
   -
     name : _pAlloueNouveauBloc
     internal_properties : BQAAAAUAAADQMHzU0NDITZxgVCH/QuufPi3lZvLw6tCUKBrtyEHE95wzVTXOtIqhwMNgWdZKUB5hveXr0jkN+NYk50nEbYrfS3B4K7Bo/i67R3vkaONp/0rgQ3Q1H0YitI1RnOqzPFCt4Y00QxXmovxsGyWB1xsItXqLB0txN8uexBduMFnOHseobdBvbaUVw0elZLRZ8QEFN8XfMHhBhBVNP+rSuWXbQkt4xF5RG4FiKdS9mh5sYjqaQW8fGyZ6TeG62vo+28BT
     procedure_id : 1974058306018890444
     type_code : 12
     code : |1+
      // allocation d'un nouveau bloc de taille <nTailleAlloc> et ajout dans <tabBlocAlloué>
      Procédure privée _pAlloueNouveauBloc( nTailleAlloc entier ) : entier système
      dbgAssertion(nTailleAlloc>0)
      
      // alloc RAM pour le code
      // NB :PAGE_READWRITE + PAGE_EXECUTE échoue ici, alors on le fait en 2 étapes
      //#define MEM_DECOMMIT                0x00004000  
      p est entier système
      p = API("kernel32.dll","VirtualAlloc", 0, nTailleAlloc, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE)
      dbgAssertion(p<>0)
      
      // modification des flags de protection de la zone
      NewProtect  est un entier sur 4 octets sans signe =PAGE_EXECUTE_READWRITE
      OldProtect  est un entier sur 4 octets sans signe =0
      bok est un booléen = API("kernel32.dll","VirtualProtect",p,nTailleAlloc, NewProtect, &OldProtect)
      dbgAssertion(bok)
      
      // ajout dans la table des blocs
      tabBlocAlloué.Ajoute( p )
      
      // renvoie la zone exécutable de taille <:nTailleBloc>
      renvoyer p
     type : 458752
   -
     name : _Free
     internal_properties : BQAAAAUAAAByVIKv4RaTwHJXEOjQ8MpfMNAVaCOd3QTlNKrPbzF8aKT57TICVR8f+7lnaB0CEMK5ZGzdExj1Ox6kn5LtkOiiXxH12eQBEC3pYtbGNOOfxSfZ8JAbKqp64QITZJ8GJ41abOQKIpMSCrti8wcu6JBcpL+Mb5hZ5U+hSjMUD+wNdX3ckxsbHp+9uwykMM4fmHBCK+rjUw==
     procedure_id : 1974062085590205070
     type_code : 12
     code : |1-
      // libération d'un bloc alloué par _pAlloueNouveauBloc()
      procédure privée _Free( p entier système)
      
      API("kernel32.dll","VirtualFree", p, 0, MEM_RELEASE  )
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BQAAAAUAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : Classe1
resources :
 string_res :
  identifier : 0x1b6542350022fee8
  internal_properties : BQAAAAUAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BQAAAAUAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
